===============
zeam.utils.text
===============

You can store some text in a Text object:

  >>> from zeam.utils.text import Text

  >>> my_text = Text()

  >>> from zeam.utils.text import interfaces
  >>> from zope.interface.verify import verifyObject

  >>> verifyObject(interfaces.IText, my_text)
  True

By default you have no text, and the format is ``raw``:

  >>> my_text.text
  u''
  >>> my_text.raw
  u''
  >>> my_text.format
  'raw'

You can't set the text yourself:

  >>> my_text.text = 'Hacked!'
  Traceback (most recent call last):
    ...
  AttributeError: can't set attribute

Some test text:

  >>> raw_text = """I like:
  ...
  ... * Ice cream
  ... * Vodka
  ... * Strawberries"""


Raw format
----------

You can store you text as a raw format, and get the text around
``<pre></pre>``:

  >>> my_text.format = 'raw'
  >>> my_text.raw = raw_text
  >>> print my_text.text
  <pre>I like:
  <BLANKLINE>
  * Ice cream
  * Vodka
  * Strawberries</pre>
  >>> my_text.raw == raw_text
  True

And this is possible because of the ``raw`` text formatter:

  >>> from zope.component import getUtility

  >>> formatter = getUtility(interfaces.ITextFormat, name='raw')
  >>> formatter
  <zeam.utils.text.format.RawFormat object at ...>
  >>> verifyObject(interfaces.ITextFormat, formatter)
  True


Restructured text format
------------------------

If you wish to become a more experienced user you can use restructured
text:

  >>> my_text.format = 'rest'
  >>> my_text.raw = raw_text
  >>> print my_text.text
  <p>I like:</p>
  <ul class="simple">
  <li>Ice cream</li>
  <li>Vodka</li>
  <li>Strawberries</li>
  </ul>
  >>> my_text.raw == raw_text
  True

And all this advanced is possible because of the ``rest`` text formatter:

  >>> formatter = getUtility(interfaces.ITextFormat, name='rest')
  >>> formatter
  <zeam.utils.text.format.RestFormat object at ...>
  >>> verifyObject(interfaces.ITextFormat, formatter)
  True
